// <auto-generated />
using System;
using EMS_APP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS_APP.Migrations
{
    [DbContext(typeof(EMS_DBContext))]
    partial class EMS_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EMS_APP.Models.departmentModel", b =>
                {
                    b.Property<int>("deptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("deptID"), 1L, 1);

                    b.Property<string>("deptName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Department Name");

                    b.HasKey("deptID");

                    b.ToTable("DEPARTMENTS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            deptID = 1,
                            deptName = "Admin"
                        });
                });

            modelBuilder.Entity("EMS_APP.Models.employeeModel", b =>
                {
                    b.Property<int>("empId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empId"), 1L, 1);

                    b.Property<int>("deptID")
                        .HasColumnType("int")
                        .HasColumnName("Dapartment ID");

                    b.Property<DateTime?>("empDOB")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("DOB");

                    b.Property<string>("empEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email Address");

                    b.Property<string>("empName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("empPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("Phone Number");

                    b.Property<bool>("isAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("ADMIN");

                    b.HasKey("empId");

                    b.HasIndex("deptID");

                    b.ToTable("EMPLOYEES LIST", (string)null);

                    b.HasData(
                        new
                        {
                            empId = 1,
                            deptID = 1,
                            empDOB = new DateTime(2001, 3, 19, 21, 36, 26, 174, DateTimeKind.Local).AddTicks(6712),
                            empEmail = "admin@ems.com",
                            empName = "Admin",
                            empPhone = "09987654321",
                            isAdmin = true
                        });
                });

            modelBuilder.Entity("EMS_APP.Models.employeeModel", b =>
                {
                    b.HasOne("EMS_APP.Models.departmentModel", "department")
                        .WithMany("employees")
                        .HasForeignKey("deptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DeptID");

                    b.Navigation("department");
                });

            modelBuilder.Entity("EMS_APP.Models.departmentModel", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
